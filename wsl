#!/bin/bash
#!/bin/zsh
# wsl
# ====================================
# Author: Eunchong Kim
# Date: 2023-04
# Project: user-settings
# Description: common setting for WSL
# ====================================



# ==========================================================
# Windows command
# If systemd is enabled, cannot run windows exe
# ==========================================================
if [ -z "`powershell.exe '$env:UserName'`" ]; then
    echo -e "Cannot run .exe, disable cli"
    sudo update-binfmts --disable cli
fi
WINDOWS_USERNAME=`powershell.exe '$env:UserName'`
WINDOWS_USERNAME=${WINDOWS_USERNAME/%$'\r'/} # remove ^M (ctrl+m; carriage Return)


# ==========================================================
# Alias for WSL
# ==========================================================
# Change Directory
alias onedrive="cd /mnt/c/Users/${WINDOWS_USERNAME}/OneDrive"
alias downloads="cd /mnt/c/Users/${WINDOWS_USERNAME}/Downloads"

# mkdir option
alias mkdir='mkdir -m 755'

# OPEN
alias open='xdg-open'

# Windows program
# Python on powershell
alias ppy='powershell.exe python'
alias ppyjl='powershell.exe python -m jupyterlab --no-browser'
# Edge browser
export PATH=$PATH:/mnt/c/Program\ Files\ \(x86\)/Microsoft/Edge/Application
alias edge='msedge.exe'

# Windows store apps
# Reference: https://www.tenforums.com/software-apps/57000-method-open-any-windows-10-apps-command-line.html


# ==========================================================
# Play media on WSL
# ==========================================================
# audio (may not work)
export PULSE_SERVER=tcp:localhost


# ==========================================================
# Syncthing for Metisp or UX310UQ
# ==========================================================
if [ `hostname` = 'MetisP' -o `hostname` = 'UX310UQ' ]; then
    # ------------------------------------
    #           ssh alias
    source /mnt/c/Users/${WINDOWS_USERNAME}/OneDrive/workspace/.ssh/ssh.sh

    # ------------------------------------
    #           Syncthing
    # Check syncthing running. if not, start to run
    if [ -z "`pgrep syncthing`" ]; then # If syncthing is not running
        echo -e "[Warning] Syncthing is not running. Starting Syncthing ..."
        if [ -n "`syncthing -help 2>/dev/null`" ]; then # If synching -help is not empty
            syncthing -no-browser -logfile=".syncthing.log" -logflags="3" > /tmp/syncthing.out &
        fi
    fi
    # Check again
    if [ -z "`pgrep syncthing`" ]; then # If syncthing is not running
        echo -e "[Warning] Syncthing is still not running! Check yourself."
    else
        echo -e "[Info] Syncthing is running."
    fi
fi


