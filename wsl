#!/bin/bash
#!/bin/zsh
#
# ====================================
# Author: Eunchong Kim
# Date: Jan. 2021
# Project: user-settings
# Description: common setting for WSL
# ====================================


this_win_username=`powershell.exe '$env:UserName'`


# ------------------------------------
#       Set X Server DISPLAY path
# ------------------------------------
#https://stackoverflow.com/questions/61860208/wsl-2-run-graphical-linux-desktop-applications-from-windows-10-bash-shell-erro
if [[ `hostname` == 'Metisp' -o `hostname` == 'SurfaceB3' ]]; then
    export DISPLAY=$(route.exe print | grep 0.0.0.0 | head -1 | awk '{print $4}'):0.0
else
    export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0
    #export DISPLAY=$(/sbin/ip route | awk '/default/ { print $3 }'):0
fi



# ------------------------------------
#   Start VcXsrv on Windows if not running
# ------------------------------------
# Get Windows running process list via powersell.exe and check if it is running
powershell.exe -Command '& tasklist' |
    if ! grep -q vcxsrv; then
        echo '[Warning] VcXsrv is not running. Starting the VcXSrv ...'
        powershell.exe -Command '& "C:\Program Files\VcXsrv\vcxsrv.exe" -multiwindow -nowgl -ac'
    fi
# Check again
powershell.exe -Command '& tasklist' |
    if ! grep -q vcxsrv; then
        echo '[Warning] VcXsrv is still not running! Check yourself.'
    else
        echo '[Info] VcXsrv is running.'
    fi

# Memo: VcXsrv Options
# -ac       disable access control restrictions
# -[no]wgl: Enable the GLX extension to use the native Windows WGL interface for hardware-accelerated OpenGL


# ------------------------------------
#               Alias
# ------------------------------------
# Change Directory
alias onedrive="cd /mnt/c/Users/$this_win_username/OneDrive/workspace"
alias download='cd /mnt/c/Users/$this_win_username/Downloads'

# mkdir option
alias mkdir='mkdir -m 755'

# OPEN
alias open='xdg-open'

# Windows store apps
# Reference: https://www.tenforums.com/software-apps/57000-method-open-any-windows-10-apps-command-line.html
# WPS office
alias wpsoffice="powershell.exe -Command '& explorer.exe shell:AppsFolder\ZhuhaiKingsoftOfficeSoftw.WPSOffice2019_924xes6e8q1tw!WPSOffice2019'"
# TODO: add parameter of file to open

# Windows program
# Edge browser
export PATH=$PATH:/mnt/c/Program\ Files\ \(x86\)/Microsoft/Edge/Application
alias edge='msedge.exe'


#-----------------------------------------------
#               source ROOT
#-----------------------------------------------
if [[ $shell_type =~ '-zsh' ]]; then
    setopt +o nomatch
    thisroot=`ls /opt/root/6.*.*-install/bin/thisroot.sh ~/.local/opt/root/6.*.*-install/bin/thisroot.sh 2>/dev/null | sort -V | tail -n 1`
    setopt -o nomatch
else
    thisroot=`ls /opt/root/6.*.*-install/bin/thisroot.sh ~/.local/opt/root/6.*.*-install/bin/thisroot.sh 2>/dev/null | sort -V | tail -n 1`
fi
# notice: 2>/dev/null is for suppress error message
if [ ! -z $thisroot -a -f $thisroot ]; then
    source $thisroot
fi


# ------------------------------------
#               Media
# ------------------------------------
# audio (may not work)
export PULSE_SERVER=tcp:localhost


# ------------------------------------
#       Windows terminal setting
# ------------------------------------
function wtsetting() {
    setting_path=/mnt/c/Users/${this_win_username}/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json
    vim $setting_path
    vimdiff $setting_path $HOME/user-settings/windows-terminal/.
}


# ------------------------------------
#           Syncthing
# ------------------------------------
if [ -z "`pgrep syncthing`" ]; then # If syncthing is not running
    echo -e "[Warning] Syncthing is not running. Starting Syncthing ..."
    if [ -n "`syncthing -help 2>/dev/null`" ]; then # If synching -help is not empty
        syncthing -no-browser -logfile=".syncthing.log" -logflags="3" > /tmp/syncthing.out &
    fi
fi
# Check again
if [ -z "`pgrep syncthing`" ]; then # If syncthing is not running
    echo -e "[Warning] Syncthing is still not running! Check yourself."
else
    echo -e "[Info] Syncthing is running."
fi
