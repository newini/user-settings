#!/bin/bash
#!/bin/zsh
#
# ====================================
# Author: Eunchong Kim
# Date: Aug., 2020
# Project: user-settings
# Description: common setting for WSL
# ====================================


# ------------------------------------
#               Display
# ------------------------------------
# X Server DISPLAY
    export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0

# Start VcXsrv if not running
# VcXsrv Options
# -ac       disable access control restrictions
# -[no]wgl: Enable the GLX extension to use the native Windows WGL interface for hardware-accelerated OpenGL
    powershell.exe -Command '& tasklist' |
        if ! grep -q vcxsrv; then
            powershell.exe -Command '& "C:\Program Files\VcXsrv\vcxsrv.exe" -multiwindow -nowgl -ac'
        fi


# ------------------------------------
#               Alias
# ------------------------------------
# Change Directory
    alias onedrive="cd /mnt/c/Users/eckim/OneDrive/workspace"
    alias my-thesis='cd /mnt/c/Users/eckim/OneDrive/Docu/Work/JLAB/Master/thesis'
    alias data='cd /mnt/d/data/'

# mkdir option
    alias mkdir='mkdir -m 755'

# OPEN
    alias open='xdg-open'

# Windows program
    export PATH=$PATH:/mnt/c/Program\ Files\ \(x86\)/Adobe/Acrobat\ Reader\ DC/Reader
    alias adobe='AcroRd32.exe'


# ------------------------------------
#               Media
# ------------------------------------
# audio (may not work)
    export PULSE_SERVER=tcp:localhost


# ------------------------------------
#       Windows terminal setting
# ------------------------------------
    function wtsetting() {
        this_win_username=eunchong
        if [ -d "/mnt/c/Users/eckim" ]; then
            this_win_username=eckim
        fi
        setting_path=/mnt/c/Users/${this_win_username}/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json
        vim $setting_path
        cp $setting_path $HOME/user-settings/windows-terminal/.
    }

# ------------------------------------
#           Syncthing
# ------------------------------------
if [ -z "`pgrep syncthing`" ]; then # If syncthing is not running
    echo -e "Syncthing is not running"
    if [ -n "`syncthing -help 2>/dev/null`" ]; then # If synching -help is not empty
        syncthing -no-browser -logfile=".syncthing.log" -logflags="3" > /tmp/syncthing.out &
        echo -e "Successfully run the Syncthing"
    fi
fi
